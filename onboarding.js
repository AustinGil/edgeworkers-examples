import { httpRequest } from 'http-request';
/** @see https://openweathermap.org/api */
const OPENWEATHER_API_KEY = 'TODO';

/**
 * Part 3
 *
 * @param {string} countryCode
 */
function getFlagEmoji(countryCode) {
  return countryCode
    .toUpperCase()
    .replace(/./g, (char) =>
      String.fromCodePoint(127_397 + char.codePointAt())
    );
}

/**
 * Part 4
 *
 * @param {string} city
 */
async function getWeatherForCity(city) {
  const url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${OPENWEATHER_API_KEY}`;
  const response = await httpRequest(url);
  return response;
}

/** @param {EW.IngressClientRequest} request */
export async function onClientRequest(request) {
  const { city, country } = request.userLocation;
  const weather = await getWeatherForCity(city);

  request.respondWith(
    200,
    {},
    `<html>
      <head>
        <!-- 2. More practical static example -->
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width,initial-scale=1" />
        <title>Hello Akamai EdgeWorkers 👋</title>
        <link rel="icon" href="data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='.9em' font-size='90'>👋</text></svg>" />
        <link rel="stylesheet" type="text/css" href="https://unpkg.com/bedrocss">
        <style>
          body { max-width: 60rem; margin: auto; padding: 2rem; font-family: Roboto, system-ui; }
          a { color: #017ac6; }
        </style>
      </head>
      <body>
        <!-- 1. Just hello world text-->
        <h1>Hello From Akamai EdgeWorkers 👋</h1>
  
        <p>EdgeWorkers are serverless compute environments running on Akamai's network 📡🌐</p>
        
        <p>Akamai has approximately 325,000 servers in more than 135 countries and over 1,400 networks around the world 🌎🤯</p>
        
        <p>That means you can run serverless functions super close to your users, reducing response times, and giving them a faster experience no matter where they are 🚴‍♀️🏎🚄🛫🚀
        <br>
        <br>
        (Besides maybe Antarctica. Sorry penguinos 🐧☃)
        </p>
  
        <p><a href="https://techdocs.akamai.com/edgeworkers/docs/welcome-to-edgeworkers">Learn more about EdgeWorkers 📄</a></p>

        <!-- 3. Dynamic content -->
        <h2>Dynamic Content</h2>
        <p>You may be familiar with CDNs serving static files from all over the world. EdgeWorkers are similar, but they can be used to serve dynamic content.</p> 
        <p>This page was dynamically generated by the nearest EdgeWorker to ${city}, ${getFlagEmoji(
      country
    )}. (👈 see what we did there?)</p>
        <p>You can't do <b>that</b> with just a CDN. But you <b>can</b> with EdgeWorkers!</p>

        <!-- 4. API gateways -->
        <h2>API Gateways</h2>
        <p>You may want to create an API gateway for a number of reasons. Get around CORS, use a custom domain, or use it to serve a different API version, faster network responses.</p>
        <p>Here we're using the OpenWeatherMap API to get the weather for ${city}:</p>

        ${weather.cod === '404'
      ? `<p>No weather data found for ${city}</p>`
      : `<table>
          <tr>
            <th align="left">Description</th>
            <td>${weather.weather[0].description} <img width="25" height="25" src="https://openweathermap.org/img/wn/${weather.weather[0].icon}.png" alt=""></td>
          </tr>
          <tr>
            <th align="left">Temperature</th>
            <td>${weather.main.temp}°C</td>
          </tr>
          <tr>
            <th align="left">Feels like</th>
            <td>${weather.main.feels_like}°C</td>
          </tr>
          <tr>
            <th align="left">High</th>
            <td>${weather.main.temp_max}°C</td>
          </tr>
          <tr>
            <th align="left">Low</th>
            <td>${weather.main.temp_min}°C</td>
          </tr>
          <tr>
            <th align="left">Humidity</th>
            <td>${weather.main.humidity}%</td>
          </tr>
          <tr>
            <th align="left">Wind speed</th>
            <td>${weather.wind.speed} m/s</td>
          </tr>
        </table>`
    }
      </body>
    </html>`
  );
}